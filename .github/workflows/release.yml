name: Release Builder

on:
  release:
    types: [published, created, edited, prereleased]

jobs:
  # Windows
  build-win:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      # Setup
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install

      # Build
      - run: npm run electron:build -- -w # -p always

  # macOS
  build-mac:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      # Setup
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install

      # Build
      - run: npm run electron:build -- -m # -p always

  # Linux
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install

      # Build
      - run: npm run electron:build -- -l # -p always
